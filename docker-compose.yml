version: '3.8'

services:
  rest-service:
    container_name: rest-service
    build:
      context: .
      dockerfile: Dockerfile
    image: h3nnessey/rest-service
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    command: npm run start:dev
    volumes:
      - ./src:/app/src
    networks:
      - service_network
    restart: always

  postgres:
    container_name: postgres
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    image: h3nnessey/postgres
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_DB=${DATABASE_DB}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - 'postgres:/var/lib/postgresql/data/'
      - 'logs:/var/log/postgresql/'
    networks:
      - service_network
    command: postgres -c logging_collector=on -p ${DATABASE_PORT}
    restart: always

networks:
  service_network:
    name: rest_service_bridge
    driver: bridge

volumes:
  postgres:
    name: postgres
  logs:
    name: logs
